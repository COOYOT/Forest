"use strict";function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function _regeneratorRuntime(){_regeneratorRuntime=function(){return i};var u,i={},t=Object.prototype,s=t.hasOwnProperty,l=Object.defineProperty||function(t,r,e){t[r]=e.value},r="function"==typeof Symbol?Symbol:{},n=r.iterator||"@@iterator",e=r.asyncIterator||"@@asyncIterator",o=r.toStringTag||"@@toStringTag";function a(t,r,e){return Object.defineProperty(t,r,{value:e,enumerable:!0,configurable:!0,writable:!0}),t[r]}try{a({},"")}catch(u){a=function(t,r,e){return t[r]=e}}function c(t,r,e,n){var o,a,i,c,r=r&&r.prototype instanceof v?r:v,r=Object.create(r.prototype),n=new A(n||[]);return l(r,"_invoke",{value:(o=t,a=e,i=n,c=p,function(t,r){if(c===y)throw new Error("Generator is already running");if(c===m){if("throw"===t)throw r;return{value:u,done:!0}}for(i.method=t,i.arg=r;;){var e=i.delegate;if(e){e=function t(r,e){var n=e.method,o=r.iterator[n];if(o===u)return e.delegate=null,"throw"===n&&r.iterator.return&&(e.method="return",e.arg=u,t(r,e),"throw"===e.method)||"return"!==n&&(e.method="throw",e.arg=new TypeError("The iterator does not provide a '"+n+"' method")),d;n=f(o,r.iterator,e.arg);if("throw"===n.type)return e.method="throw",e.arg=n.arg,e.delegate=null,d;o=n.arg;return o?o.done?(e[r.resultName]=o.value,e.next=r.nextLoc,"return"!==e.method&&(e.method="next",e.arg=u),e.delegate=null,d):o:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,d)}(e,i);if(e){if(e===d)continue;return e}}if("next"===i.method)i.sent=i._sent=i.arg;else if("throw"===i.method){if(c===p)throw c=m,i.arg;i.dispatchException(i.arg)}else"return"===i.method&&i.abrupt("return",i.arg);c=y;e=f(o,a,i);if("normal"===e.type){if(c=i.done?m:h,e.arg===d)continue;return{value:e.arg,done:i.done}}"throw"===e.type&&(c=m,i.method="throw",i.arg=e.arg)}})}),r}function f(t,r,e){try{return{type:"normal",arg:t.call(r,e)}}catch(t){return{type:"throw",arg:t}}}i.wrap=c;var p="suspendedStart",h="suspendedYield",y="executing",m="completed",d={};function v(){}function g(){}function w(){}var r={},b=(a(r,n,function(){return this}),Object.getPrototypeOf),b=b&&b(b(T([]))),_=(b&&b!==t&&s.call(b,n)&&(r=b),w.prototype=v.prototype=Object.create(r));function L(t){["next","throw","return"].forEach(function(r){a(t,r,function(t){return this._invoke(r,t)})})}function x(i,c){var r;l(this,"_invoke",{value:function(e,n){function t(){return new c(function(t,r){!function r(t,e,n,o){var a,t=f(i[t],i,e);if("throw"!==t.type)return(e=(a=t.arg).value)&&"object"==_typeof(e)&&s.call(e,"__await")?c.resolve(e.__await).then(function(t){r("next",t,n,o)},function(t){r("throw",t,n,o)}):c.resolve(e).then(function(t){a.value=t,n(a)},function(t){return r("throw",t,n,o)});o(t.arg)}(e,n,t,r)})}return r=r?r.then(t,t):t()}})}function E(t){var r={tryLoc:t[0]};1 in t&&(r.catchLoc=t[1]),2 in t&&(r.finallyLoc=t[2],r.afterLoc=t[3]),this.tryEntries.push(r)}function S(t){var r=t.completion||{};r.type="normal",delete r.arg,t.completion=r}function A(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(E,this),this.reset(!0)}function T(r){if(r||""===r){var e,t=r[n];if(t)return t.call(r);if("function"==typeof r.next)return r;if(!isNaN(r.length))return e=-1,(t=function t(){for(;++e<r.length;)if(s.call(r,e))return t.value=r[e],t.done=!1,t;return t.value=u,t.done=!0,t}).next=t}throw new TypeError(_typeof(r)+" is not iterable")}return l(_,"constructor",{value:g.prototype=w,configurable:!0}),l(w,"constructor",{value:g,configurable:!0}),g.displayName=a(w,o,"GeneratorFunction"),i.isGeneratorFunction=function(t){t="function"==typeof t&&t.constructor;return!!t&&(t===g||"GeneratorFunction"===(t.displayName||t.name))},i.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,w):(t.__proto__=w,a(t,o,"GeneratorFunction")),t.prototype=Object.create(_),t},i.awrap=function(t){return{__await:t}},L(x.prototype),a(x.prototype,e,function(){return this}),i.AsyncIterator=x,i.async=function(t,r,e,n,o){void 0===o&&(o=Promise);var a=new x(c(t,r,e,n),o);return i.isGeneratorFunction(r)?a:a.next().then(function(t){return t.done?t.value:a.next()})},L(_),a(_,o,"Generator"),a(_,n,function(){return this}),a(_,"toString",function(){return"[object Generator]"}),i.keys=function(t){var r,e=Object(t),n=[];for(r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},i.values=T,A.prototype={constructor:A,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=u,this.done=!1,this.delegate=null,this.method="next",this.arg=u,this.tryEntries.forEach(S),!t)for(var r in this)"t"===r.charAt(0)&&s.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=u)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function t(t,r){return a.type="throw",a.arg=e,n.next=t,r&&(n.method="next",n.arg=u),!!r}for(var r=this.tryEntries.length-1;0<=r;--r){var o=this.tryEntries[r],a=o.completion;if("root"===o.tryLoc)return t("end");if(o.tryLoc<=this.prev){var i=s.call(o,"catchLoc"),c=s.call(o,"finallyLoc");if(i&&c){if(this.prev<o.catchLoc)return t(o.catchLoc,!0);if(this.prev<o.finallyLoc)return t(o.finallyLoc)}else if(i){if(this.prev<o.catchLoc)return t(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return t(o.finallyLoc)}}}},abrupt:function(t,r){for(var e=this.tryEntries.length-1;0<=e;--e){var n=this.tryEntries[e];if(n.tryLoc<=this.prev&&s.call(n,"finallyLoc")&&this.prev<n.finallyLoc){var o=n;break}}var a=(o=o&&("break"===t||"continue"===t)&&o.tryLoc<=r&&r<=o.finallyLoc?null:o)?o.completion:{};return a.type=t,a.arg=r,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(a)},complete:function(t,r){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&r&&(this.next=r),d},finish:function(t){for(var r=this.tryEntries.length-1;0<=r;--r){var e=this.tryEntries[r];if(e.finallyLoc===t)return this.complete(e.completion,e.afterLoc),S(e),d}},catch:function(t){for(var r=this.tryEntries.length-1;0<=r;--r){var e,n,o=this.tryEntries[r];if(o.tryLoc===t)return"throw"===(e=o.completion).type&&(n=e.arg,S(o)),n}throw new Error("illegal catch attempt")},delegateYield:function(t,r,e){return this.delegate={iterator:T(t),resultName:r,nextLoc:e},"next"===this.method&&(this.arg=u),d}},i}function _toConsumableArray(t){return _arrayWithoutHoles(t)||_iterableToArray(t)||_unsupportedIterableToArray(t)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(t,r){var e;if(t)return"string"==typeof t?_arrayLikeToArray(t,r):"Map"===(e="Object"===(e=Object.prototype.toString.call(t).slice(8,-1))&&t.constructor?t.constructor.name:e)||"Set"===e?Array.from(t):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?_arrayLikeToArray(t,r):void 0}function _iterableToArray(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}function _arrayWithoutHoles(t){if(Array.isArray(t))return _arrayLikeToArray(t)}function _arrayLikeToArray(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=new Array(r);e<r;e++)n[e]=t[e];return n}function asyncGeneratorStep(t,r,e,n,o,a,i){try{var c=t[a](i),u=c.value}catch(t){return void e(t)}c.done?r(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator(c){return function(){var t=this,i=arguments;return new Promise(function(r,e){var n=c.apply(t,i);function o(t){asyncGeneratorStep(n,r,e,o,a,"next",t)}function a(t){asyncGeneratorStep(n,r,e,o,a,"throw",t)}o(void 0)})}}var map;function initMap(){return _initMap.apply(this,arguments)}function _initMap(){return(_initMap=_asyncToGenerator(_regeneratorRuntime().mark(function t(){var r,e,n;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return r={lat:50.08821173703995,lng:19.89284198582771},t.next=3,google.maps.importLibrary("maps");case 3:return e=t.sent,e=e.Map,t.next=7,google.maps.importLibrary("marker");case 7:n=t.sent,n=n.AdvancedMarkerElement,map=new e(document.querySelector(".contact__map"),{zoom:19,center:r,mapId:"FOREST_MAP_ID"}),new n({map:map,position:r,title:"ForestProject"});case 11:case"end":return t.stop()}},t)}))).apply(this,arguments)}!function(o){var a,i,c,u="The Google Maps JavaScript API",s="google",l="importLibrary",f=document,t=window,p=(t=t[s]||(t[s]={})).maps||(t.maps={}),h=new Set,y=new URLSearchParams;p[l]?console.warn(u+" only loads once. Ignoring:",o):p[l]=function(t){for(var r=arguments.length,e=new Array(1<r?r-1:0),n=1;n<r;n++)e[n-1]=arguments[n];return h.add(t)&&(a=a||new Promise(function(){var e=_asyncToGenerator(_regeneratorRuntime().mark(function t(r,e){var n;return _regeneratorRuntime().wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,i=f.createElement("script");case 2:for(c in y.set("libraries",_toConsumableArray(h)+""),o)y.set(c.replace(/[A-Z]/g,function(t){return"_"+t[0].toLowerCase()}),o[c]);y.set("callback",s+".maps.__ib__"),i.src="https://maps.".concat(s,"apis.com/maps/api/js?")+y,p.__ib__=r,i.onerror=function(){return a=e(Error(u+" could not load."))},i.nonce=(null==(n=f.querySelector("script[nonce]"))?void 0:n.nonce)||"",f.head.append(i);case 10:case"end":return t.stop()}},t)}));return function(t,r){return e.apply(this,arguments)}}())).then(function(){return p[l].apply(p,[t].concat(e))})}}({key:"AIzaSyC-i6azW-MfjhjWqPDB-NgJa4P8I7T2MnI",v:"beta"}),initMap();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
